Here is the full code with the parameterized branch name:
Groovy
pipeline {
    agent any
    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'main')
    }
    triggers {
        githubPush()
    }
    stages {
        stage('Build') {
            steps {
                withCredentials([usernamePassword(credentialsId: '3e999b94-ef75-42a5-8abf-b621561cb8be', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                    git url: 'https://github.com/hariingit/kubernetes-ci-cd.git', branch: "${params.BRANCH_NAME}", credentialsId: '3e999b94-ef75-42a5-8abf-b621561cb8be'
                }
                sh 'printenv' // print environment variables
                sh 'git log -1' // print latest commit
                sh 'docker build -t my-nginx .' // build Docker image
            }
        }
        stage('Create Service') {
            steps {
                sh 'kubectl apply -f service.yaml'
            }
        }
        stage('Deploy to Green') {
            steps {
                sh 'kubectl apply -f green-deployment.yaml'
            }
        }
        stage('Verify Green') {
            steps {
                sh 'kubectl get deployments -l environment=green'
                sh 'kubectl get pods -l environment=green'
            }
        }
        stage('Switch to Green') {
            steps {
                sh 'kubectl patch svc/my-nginx -p \'{"spec":{"selector":{"environment":"green"}}}\''
            }
        }
        stage('Deploy to Blue') {
            steps {
                sh 'kubectl apply -f blue-deployment.yaml'
            }
        }
        stage('Verify Blue') {
            steps {
                sh 'kubectl get deployments -l environment=blue'
                sh 'kubectl get pods -l environment=blue'
            }
        }
        stage('Switch to Blue') {
            steps {
                sh 'kubectl patch svc/my-nginx -p \'{"spec":{"selector":{"environment":"blue"}}}\''
            }
        }
    }
}
Now, when triggering the pipeline, you can pass the desired branch name as a parameter, and the pipeline will use that branch instead of the default main branch.
